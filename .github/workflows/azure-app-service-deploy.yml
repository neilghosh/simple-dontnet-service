name: Build Docker and Deploy to Azure App Service

# This workflow runs on:
# - Pull requests to main (build and test only)
# - Pushes to main (build, test, build Docker image, push to ACR, and deploy to App Service)
# - Manual trigger via workflow_dispatch
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

env:
  DOTNET_VERSION: '8.0.x'
  AZURE_WEBAPP_NAME: 'simple-dotnet-service'
  AZURE_RESOURCE_GROUP: 'simple-dotnet-service-rg'
  AZURE_CONTAINER_REGISTRY: 'simpledotnetregistry565.azurecr.io'
  REGISTRY_NAME: 'simpledotnetregistry565'
  IMAGE_NAME: 'simple-dotnet-service'
  IMAGE_TAG: ${{ github.sha }}

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
    
    - name: Restore dependencies
      run: dotnet restore simple-dotnet-service.sln
    
    - name: Build
      run: dotnet build simple-dotnet-service.sln --configuration Release --no-restore
    
    - name: Run tests
      run: dotnet test simple-dotnet-service.sln --no-build --verbosity normal --configuration Release

  build-and-push-docker:
    runs-on: ubuntu-latest
    needs: build-and-test
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
    permissions:
      contents: read
      id-token: write
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Log in to Azure using Managed Identity
      uses: azure/login@v2
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
    
    - name: Log in to Azure Container Registry
      run: |
        az acr login --name ${{ env.REGISTRY_NAME }}
    
    - name: Build and push Docker image to ACR
      run: |
        docker build -t ${{ env.AZURE_CONTAINER_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} \
                     -t ${{ env.AZURE_CONTAINER_REGISTRY }}/${{ env.IMAGE_NAME }}:latest .
        docker push ${{ env.AZURE_CONTAINER_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
        docker push ${{ env.AZURE_CONTAINER_REGISTRY }}/${{ env.IMAGE_NAME }}:latest

  deploy-to-app-service:
    runs-on: ubuntu-latest
    needs: build-and-push-docker
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
    permissions:
      contents: read
      id-token: write
    
    steps:
    - name: Log in to Azure using Managed Identity
      uses: azure/login@v2
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
    
    - name: Configure App Service to use container image
      run: |
        az webapp config container set \
          --name ${{ env.AZURE_WEBAPP_NAME }} \
          --resource-group ${{ env.AZURE_RESOURCE_GROUP }} \
          --docker-custom-image-name ${{ env.AZURE_CONTAINER_REGISTRY }}/${{ env.IMAGE_NAME }}:latest \
          --docker-registry-server-url https://${{ env.AZURE_CONTAINER_REGISTRY }} \
          --docker-registry-server-username 00000000-0000-0000-0000-000000000000 \
          --docker-registry-server-password "$(az account get-access-token --query accessToken -o tsv)"
    
    - name: Restart App Service
      run: |
        az webapp restart \
          --name ${{ env.AZURE_WEBAPP_NAME }} \
          --resource-group ${{ env.AZURE_RESOURCE_GROUP }}
    
    - name: Get App Service URL
      run: |
        WEBAPP_URL=$(az webapp show --resource-group ${{ env.AZURE_RESOURCE_GROUP }} --name ${{ env.AZURE_WEBAPP_NAME }} --query defaultHostName -o tsv)
        echo "App Service URL: https://${WEBAPP_URL}"
        echo "Test the API at: https://${WEBAPP_URL}/api/ip/outbound"
