name: Build and Deploy to Azure Container Instances

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

env:
  DOTNET_VERSION: '8.0.x'
  AZURE_CONTAINER_REGISTRY: ${{ secrets.AZURE_CONTAINER_REGISTRY }}
  REGISTRY_USERNAME: ${{ secrets.REGISTRY_USERNAME }}
  CONTAINER_NAME: simple-dotnet-service
  RESOURCE_GROUP: ${{ secrets.AZURE_RESOURCE_GROUP }}
  CONTAINER_INSTANCE_NAME: simple-dotnet-service-aci

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
    
    - name: Restore dependencies
      run: dotnet restore simple-dotnet-service.sln
    
    - name: Build
      run: dotnet build simple-dotnet-service.sln --configuration Release --no-restore
    
    - name: Run tests
      run: dotnet test simple-dotnet-service.sln --no-build --verbosity normal --configuration Release

  build-and-push-docker:
    runs-on: ubuntu-latest
    needs: build-and-test
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
    permissions:
      contents: read
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Log in to Azure Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.AZURE_CONTAINER_REGISTRY }}
        username: ${{ env.REGISTRY_USERNAME }}
        password: ${{ secrets.REGISTRY_PASSWORD }}
    
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: |
          ${{ env.AZURE_CONTAINER_REGISTRY }}/${{ env.CONTAINER_NAME }}:latest
          ${{ env.AZURE_CONTAINER_REGISTRY }}/${{ env.CONTAINER_NAME }}:${{ github.sha }}

  deploy-to-aci:
    runs-on: ubuntu-latest
    needs: build-and-push-docker
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
    permissions:
      contents: read
    
    steps:
    - name: Log in to Azure
      uses: azure/login@v2
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    
    - name: Deploy to Azure Container Instances
      uses: azure/aci-deploy@v1
      with:
        resource-group: ${{ env.RESOURCE_GROUP }}
        dns-name-label: simple-dotnet-service-${{ github.run_number }}
        image: ${{ env.AZURE_CONTAINER_REGISTRY }}/${{ env.CONTAINER_NAME }}:${{ github.sha }}
        registry-login-server: ${{ env.AZURE_CONTAINER_REGISTRY }}
        registry-username: ${{ env.REGISTRY_USERNAME }}
        registry-password: ${{ secrets.REGISTRY_PASSWORD }}
        name: ${{ env.CONTAINER_INSTANCE_NAME }}
        location: 'eastus'
        ports: '8080'
        cpu: 1
        memory: 1.5
        environment-variables: ASPNETCORE_ENVIRONMENT=Production
    
    - name: Get Container Instance URL
      run: |
        FQDN=$(az container show --resource-group ${{ env.RESOURCE_GROUP }} --name ${{ env.CONTAINER_INSTANCE_NAME }} --query ipAddress.fqdn --output tsv)
        echo "Container Instance URL: http://$FQDN:8080"
        echo "Test the API at: http://$FQDN:8080/api/ip/outbound"
